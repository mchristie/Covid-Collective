name: Deploy

on:
  push:
    branches:
      - master

jobs:
  API:
    runs-on: 'ubuntu-latest'

    # services:
    #   mysql:
    #     image: mysql:5.7
    #     env:
    #       MYSQL_ALLOW_EMPTY_PASSWORD: yes
    #       MYSQL_DATABASE: test
    #       MYSQL_ROOT_PASSWORD: root
    #     ports:
    #       - 3306
    #       - 13306
    #     options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup PHP
      uses: shivammathur/setup-php@v1
      with:
        php-version: '7.4'

    - name: Install Dependencies, including dev dependencies
      run: |
        npm install serverless-pseudo-parameters
        composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist --optimize-autoloader
        npm install

    # - name: Execute tests (Unit and Feature tests) via PHPUnit
    #   run: |
    #     php artisan migrate:refresh --seed
    #     ./vendor/bin/phpunit
    #   env:
    #     APP_ENV: testing
    #     DB_HOST: 127.0.0.1
    #     DB_PORT: ${{ job.services.mysql.ports['3306'] }}
    #     DB_DATABASE: test
    #     DB_USERNAME: root
    #     DB_PASSWORD: root
    #     DB_ROOT_PASSWORD: root

    - name: Remove dev dependencies
      run: |
        /bin/rm bootstrap/cache/*
        composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --no-dev --prefer-dist --optimize-autoloader
        php artisan config:clear

    - name: Build assets
      run: |
        npm run production

    - name: Serverless deploy
      uses: serverless/github-action@master
      with:
        args: deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
        APP_KEY: ${{ secrets.APP_KEY }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        AWS_APP_KEY: ${{ secrets.AWS_APP_KEY }}
        AWS_APP_SECRET: ${{ secrets.AWS_APP_SECRET }}

    - name: Run migrations
      run: vendor/bin/bref cli --region eu-west-1 CovidCollective-production-artisan -- migrate --force
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}

    - name: Deploy Assets
      run: |
        aws s3 sync ./public/js s3://covid-collective-assets/js
        aws s3 sync ./public/css s3://covid-collective-assets/css
        aws s3 sync ./public/images s3://covid-collective-assets/images
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
        AWS_REGION: 'eu-west-1'
        SOURCE_DIR: 'public'

    - name: Invalidate the CloudFront cache
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_ID }} --paths "/*"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
        AWS_REGION: 'eu-west-1'
